// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Models list
model Usuarios {
  id                            Int                      @id @default(autoincrement())
  usuario                       String                   @unique @db.VarChar(30)
  apellido                      String                   @db.VarChar(50)
  nombre                        String                   @db.VarChar(50)
  dni                           String                   @db.VarChar(30)
  password                      String
  email                         String                   @db.VarChar(50)
  telefono                      String                   @db.VarChar(50)
  role                          String?                  @default("ADMIN_ROLE")
  activo                        Boolean?                 @default(true)
  createdAt                     DateTime                 @default(now())
  updatedAt                     DateTime                 @updatedAt
  CreatorDependencia            Dependencias[]
  CreatorTiposOrdenServicio     TiposOrdenServicio[]
  CreatorOrdenesServicio        OrdenesServicio[]
  CreatorOrdenesServicioTecnico OrdenesServicioTecnico[]
  CreatorUsuariosDependencias   UsuariosDependencias[]   @relation("CreatorUsuarioDependencia")
  UsuariosDependencias          UsuariosDependencias[]   @relation("UsuariosToDependencias")
}

// Dependencias
model Dependencias {
  id                   Int                    @id @default(autoincrement())
  nombre               String                 @unique @db.VarChar(150)
  activo               Boolean?               @default(true)
  creatorUserId        Int?
  creatorUser          Usuarios?              @relation(fields: [creatorUserId], references: [id])
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  UsuariosDependencias UsuariosDependencias[]
}

// Usuarios - Dependencias
model UsuariosDependencias {
  id            Int           @id @default(autoincrement())
  dependenciaId Int?
  dependencia   Dependencias? @relation(fields: [dependenciaId], references: [id])
  usuarioId     Int?
  usuario       Usuarios?     @relation("UsuariosToDependencias", fields: [usuarioId], references: [id])
  activo        Boolean?      @default(true)
  creatorUserId Int?
  creatorUser   Usuarios?     @relation("CreatorUsuarioDependencia", fields: [creatorUserId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

// Tipos orden servicio
model TiposOrdenServicio {
  id            Int       @id @default(autoincrement())
  descripcion   String    @unique @db.VarChar(150)
  activo        Boolean?  @default(true)
  creatorUserId Int?
  creatorUser   Usuarios? @relation(fields: [creatorUserId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Ordenes de servicio
model OrdenesServicio {
  id                     Int                      @id @default(autoincrement())
  fechaPendiente         DateTime                 @default(now())
  fechaEnProceso         DateTime                 @default(now())
  fechaSolucionado       DateTime                 @default(now())
  tipoOrdenServicioId    Int?
  observacionEntrega     String?                  @db.VarChar(500)
  estadoOrden            String?                  @default("PENDIENTE")
  estadoEquipo           String?                  @default("FUNCIONANDO")
  activo                 Boolean?                 @default(true)
  creatorUserId          Int?
  creatorUser            Usuarios?                @relation(fields: [creatorUserId], references: [id])
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  OrdenesServicioTecnico OrdenesServicioTecnico[]
}

// Ordenes de servicio - Tecnico
model OrdenesServicioTecnico {
  id                 Int              @id @default(autoincrement())
  ordenServicioId    Int?
  tecnicoId          Int?
  observacionTecnico String?          @db.VarChar(500)
  activo             Boolean?         @default(true)
  creatorUserId      Int?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  tecnico            Usuarios?        @relation(fields: [tecnicoId], references: [id])
  ordenServicio      OrdenesServicio? @relation(fields: [ordenServicioId], references: [id])
}
